回溯好难啊啊啊啊啊啊
什么时候能独立写啊
import java.util.*;
class Solution {
    public static String[] permutation(String S) {
        char[] str = S.toCharArray();
        Arrays.sort(str);
        List<String> res = new ArrayList<>();
        int[] visit = new int[str.length];
        StringBuilder path = new StringBuilder(str.length);
        backTrace(str,res,path,visit,0,str.length);
        return res.toArray(new String[0]);
    }
    public static void backTrace(char[] str,List<String> res,StringBuilder path,int[] visit,int depth,int len){
        if(depth == len){
            res.add(path.toString());
            return;
        }
        for(int i = 0; i < len; i++){
            if(visit[i] == 0){
                if((i > 0 && str[i] == str[i - 1]) && visit[i-1] == 0)
                    continue;
                path.append(str[i]);
                visit[i] = 1;
                backTrace(str,res,path,visit,depth+1,len);
                path.deleteCharAt(depth);
                visit[i] = 0;
            }
        }
    }
}
